library(eeptools)
setwd(~)
setwd('~')
# Set-up
setwd('~')
library(dplyr)
library(leaflet)
library(plotly)
# read the data in
shootings.2017 <- read.csv('data/shootings-2017.csv')
# Part 1: Summary Information
# get info: number of shootings, number of lost lives, the most impacted city,
#  (impact translates to the number of lost lives in the city from the shooting)
num.shootings <- nrow(shootings.2017)
lost.lives <- shootings.2017 %>%
select(killed) %>%
sum()
most.impacted.city <- shootings.2017 %>%
filter(killed == max(killed)) %>%
select(city)
date.most.shootings <- shootings.2017 %>%
group_by(date) %>%
summarize(
total.killed = sum(killed)
) %>%
filter(total.killed == max(total.killed))
# Part 2: Summary Table
# summarize the total number of deaths from shootings in each state
killed.each.state <- shootings.2017 %>%
group_by(state) %>%
summarize(total.killed = sum(killed))
View(killed.each.state)
# Part 3: Description of a particular incident
most.killed.city <- shootings.2017$city[shootings.2017$killed == max(shootings.2017$killed)]
most.killed.injured <- shootings.2017$injured[shootings.2017$city == most.killed.city]
most.killed.killed <- shootings.2017$killed[shootings.2017$city == most.killed.city]
most.killed.perc <- round(most.killed.killed / sum(shootings.2017$killed) * 100)
# Part 4: Interactive Map
getColor <- function(shootings.2017) {
sapply(shootings.2017$killed, function(killed) {
if(killed == 0) {
"green"
} else if(killed <= 10) {
"orange"
} else {
"red"
}
})
}
icons <- awesomeIcons(
icon = 'ios-close',
library = 'ion',
markerColor = getColor(shootings.2017)
)
qpal <- colorQuantile("RdYlBu", shootings.2017$killed, n = 3)
shooting.map <- leaflet() %>%
addTiles() %>%
addAwesomeMarkers(lng = shootings.2017$lng,
lat = shootings.2017$lat,
label = paste("Date:", shootings.2017$date,
"City:", shootings.2017$city,
"Injured:", shootings.2017$injured,
"Killed:", shootings.2017$killed),
labelOptions = labelOptions(noHide = F,
style=list(
riseOnHover = TRUE
)
),
icon = icons
)
shooting.map
# Part 4: An interactive plot
shooting.plot <- plot_ly(killed.each.state, x = killed.each.state$state, y = killed.each.state$total.killed, type = 'bar')
shooting.plot
setwd('~')
setwd('~/a6-jeeyawn-1')
setwd('C:/Users/jiony/a6-jeeyawn-1')
getwd()
# Set-up
setwd('C:/Users/jiony/a6-jeeyawn-1')
library(dplyr)
library(leaflet)
library(plotly)
# read the data in
shootings.2017 <- read.csv('data/shootings-2017.csv')
# Part 1: Summary Information
# get info: number of shootings, number of lost lives, the most impacted city,
#  (impact translates to the number of lost lives in the city from the shooting)
num.shootings <- nrow(shootings.2017)
lost.lives <- shootings.2017 %>%
select(killed) %>%
sum()
most.impacted.city <- shootings.2017 %>%
filter(killed == max(killed)) %>%
select(city)
date.most.shootings <- shootings.2017 %>%
group_by(date) %>%
summarize(
total.killed = sum(killed)
) %>%
filter(total.killed == max(total.killed))
# Part 2: Summary Table
# summarize the total number of deaths from shootings in each state
killed.each.state <- shootings.2017 %>%
group_by(state) %>%
summarize(total.killed = sum(killed))
View(killed.each.state)
# Part 3: Description of a particular incident
most.killed.city <- shootings.2017$city[shootings.2017$killed == max(shootings.2017$killed)]
most.killed.injured <- shootings.2017$injured[shootings.2017$city == most.killed.city]
most.killed.killed <- shootings.2017$killed[shootings.2017$city == most.killed.city]
most.killed.perc <- round(most.killed.killed / sum(shootings.2017$killed) * 100)
# Part 4: Interactive Map
getColor <- function(shootings.2017) {
sapply(shootings.2017$killed, function(killed) {
if(killed == 0) {
"green"
} else if(killed <= 10) {
"orange"
} else {
"red"
}
})
}
icons <- awesomeIcons(
icon = 'ios-close',
library = 'ion',
markerColor = getColor(shootings.2017)
)
qpal <- colorQuantile("RdYlBu", shootings.2017$killed, n = 3)
shooting.map <- leaflet() %>%
addTiles() %>%
addAwesomeMarkers(lng = shootings.2017$lng,
lat = shootings.2017$lat,
label = paste("Date:", shootings.2017$date,
"City:", shootings.2017$city,
"Injured:", shootings.2017$injured,
"Killed:", shootings.2017$killed),
labelOptions = labelOptions(noHide = F,
style=list(
riseOnHover = TRUE
)
),
icon = icons
)
shooting.map
# Part 4: An interactive plot
shooting.plot <- plot_ly(killed.each.state, x = killed.each.state$state, y = killed.each.state$total.killed, type = 'bar')
shooting.plot
---
title: "Mapping Shootings in 2017"
output: html_document
---
```{r setup, include=FALSE, error=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(leaflet)
source('analysis.R')
```
## Summary Information
The total number of shootings that took place so far in 2017 is `r num.shootings`. The total number of lost lives from the shootings is `r lost.lives`. The most impacted city (the city with the most number of lost lives) is `r most.impacted.city$city`. The date with the greatest number of deaths from the shootings was `r date.most.shootings$date`, the Las Vegas Shooting, where `r date.most.shootings$total.killed` died.
## Summary Table
### the total number of deaths from shootings in each state
The table below is the death counts in each state where shootings occured.
```{r summary_table, warning=FALSE, message=FALSE, echo=FALSE}
knitr::kable(killed.each.state)
```
## Description of a particular incident
### Las Vegas Shooting
On `r date.most.shootings$date`, the deadliest mass shooting incident in the US history took place in `r most.killed.city`. The total number of the injured from this incident was `r most.killed.injured`, and that of the killed `r most.killed.killed`. This amounts to about `r most.killed.perc`% of the total deaths from mass shootings in 2017. Check out this [article](https://www.cbsnews.com/news/deadliest-mass-shootings-us-las-vegas-texas-church/) for more information about the Las Vegas Shooting.
## Interactive Map
```{r interactive_map, warning=FALSE, message=FALSE, echo=FALSE}
shooting.map
```
Color code of the markers: green means no death (only injuries), orange means fewer than 10 deaths, and red means more than 10 deaths from the shootings.
## Interactive Plot
```{r interactive_plot, warning=FALSE, message=FALSE, echo=FALSE}
shooting.plot
```
For the interactive plot, I chose to display the number of deaths from shootings in each state in a bar plot. I believe this data can be meaningful to the audience, as it may leverage the legislative effort from the state to pass a gun control measure.
setwd('C:/Users/jiony/INFO201')
read.csv('DisplayByIndicator.csv')
ind <- read.csv('DisplayByIndicator.csv')
view(ind)
View(ind)
y <- read.csv('NoDisplayOrGroup.csv')
